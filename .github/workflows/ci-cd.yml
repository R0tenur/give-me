name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  create:
    tags:
      - v*
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish Mac
      run: dotnet publish ./src/GiveMe/GiveMe.csproj --configuration release --runtime osx-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true --output ./mac
    - name: Publish Windows
      run: dotnet publish ./src/GiveMe/GiveMe.csproj --configuration release  --runtime win10-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true --output ./windows
    - name: Publish Ubuntu
      run: dotnet publish ./src/GiveMe/GiveMe.csproj --configuration release --runtime ubuntu-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true --output ./ubuntu
    - name: Publish ARM64
      run: dotnet publish ./src/GiveMe/GiveMe.csproj --configuration release  --runtime linux-arm64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true --output ./arm64
    - name: Upload artifacts  
      uses: actions/upload-artifact@v2
      with:
        name: published
        path: |
          ./mac
          ./windows
          ./ubuntu
          ./arm64
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: published
        path: ./
    - name: Zip artifacts
      run: |
        tar -czf giveme-mac.tar.gz mac
        zip -r giveme-windows.zip windows
        tar -czf giveme-ubuntu.tar.gz ubuntu
        tar -czf giveme-arm64.tar.gz  arm64
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Mac Asset
      id: upload-mac-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: mac.zip
        asset_name: mac.zip
        asset_content_type: application/zip
    - name: Upload Windows Asset
      id: upload-windows-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: windows.zip
        asset_name: windows.zip
        asset_content_type: application/zip
    - name: Upload Ubuntu Asset
      id: upload-ubuntu-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ubuntu.zip
        asset_name: ubuntu.zip
        asset_content_type: application/zip
    - name: Upload Arm64 Asset
      id: upload-arm64-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: arm64.zip
        asset_name: arm64.zip
        asset_content_type: application/zip
